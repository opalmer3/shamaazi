{"version":3,"sources":["components/Hero.jsx","components/DonationInputs.jsx","components/DonationSchedule.jsx","components/CalculationArea.jsx","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","className","DonationInputs","amount","split","handleAmountChange","handleSplitChange","onChange","value","type","min","max","step","name","checked","DonationSchedule","donationSchedule","map","index","CalculationArea","useState","setAmount","setSplit","setDonationSchedule","useEffect","totalDonation","method","Array","fill","dailyDonation","Math","floor","equalSchedule","toFixed","push","doubleOddSchedule","evenDay","oddDay","i","calculateDonationSchedule","event","target","includes","length","Number","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93ee7ea.chunk.js","sourcesContent":["import React from 'react';\nimport './Hero.css';\n\nfunction Hero(){\n    return <div className=\"hero\">\n                <div className='hero-msg-box'>\n                    <h1>Automate Your Donations</h1>\n                    <p>Calculate your donation below.</p>\n                </div>\n            </div>\n}\n\nexport default Hero;","import React from 'react';\nimport './DonationInputs.css';\n\n\nfunction DonationInputs({amount, split, handleAmountChange, handleSplitChange}){\n\n    return <div className='donation-inputs'>\n                \n                <label className='donation-amount'> Donation $\n                    <input onChange={handleAmountChange} \n                        className='amount-input'\n                        value={amount}\n                        type='number' \n                        min='0.01' \n                        max='1000000'\n                        step='0.01'>\n                    </input>\n                </label>\n\n                    <label className='payment-method'>\n                        <input onChange={handleSplitChange}\n                            type='radio' \n                            name='split' \n                            value='equal' \n                            checked={split === 'equal'}>\n                        </input>\n                        Pay equal amounts on each day\n                    </label>\n\n                    <label className='payment-method'>\n                        <input onChange={handleSplitChange}\n                            type='radio' \n                            name='split' \n                            value='double odd'\n                            checked={split === 'double odd'}>\n                        </input>\n                        Pay double on odd days\n                    </label>\n            </div>\n}\n\nexport default DonationInputs;","import React from 'react';\nimport './DonationSchedule.css';\n\nfunction DonationSchedule({donationSchedule}){\n    \n    return <div className=\"donationSchedule\">\n                \n                {donationSchedule.map((amount, index) => \n                    <span key={index} className='donation-info'>\n                        \n                            <div className='day'>\n                                {`Day ${index + 1}`}\n                            </div>\n                        \n                            <div className='amount'>\n                                {`$ ${amount}`}\n                            </div>\n                        \n                    </span>)}\n                    \n            </div>\n}\n\nexport default DonationSchedule;","import React, { useEffect, useState } from 'react';\nimport DonationInputs from './DonationInputs';\nimport DonationSchedule from './DonationSchedule';\nimport {calculateDonationSchedule} from '../helpers';\n\nimport './CalculationArea.css';\n\nfunction CalculationArea(){\n    const [amount, setAmount] = useState(100);\n    const [split, setSplit] = useState('equal');\n    const [donationSchedule, setDonationSchedule] = useState([]);\n\n    // Changes amount state\n    function handleAmountChange(event){\n        const {value} = event.target;\n\n        // Dont allow values with more than 2 decimal places or less than 0 \n        if(value >= 0 && (!(value.includes('.')) || value.split('.')[1].length <= 2)){\n            setAmount(Number(value));\n        }\n    }\n\n    // Changes split method state\n    function handleSplitChange(event){\n        const {value} = event.target;\n        setSplit(value);\n    }\n\n    // Calculate the donation schedule on mount and when amount or split state changes\n    useEffect(()=>{\n       setDonationSchedule(calculateDonationSchedule(amount, split));\n    }, [amount, split]);\n\n    return <div className='calculation-area'>\n\n                    <DonationInputs \n                        amount={amount}\n                        split={split}\n                        handleAmountChange={handleAmountChange}\n                        handleSplitChange={handleSplitChange}\n                    />\n\n                    <DonationSchedule donationSchedule={donationSchedule} />\n\n           </div>\n}\n\nexport default CalculationArea;","// Parameter 1: donation amount {number}\n// Parameter 2: Split method {string}\nfunction calculateDonationSchedule(totalDonation=0, method=''){\n    // Only allow numberical input > 0 for total donation\n    if (typeof totalDonation !== 'number' || totalDonation <= 0) { return new Array(10).fill('-'); }\n\n    if (method === 'equal'){\n        // Round daily donation down to nearest 2 decimal places\n        const dailyDonation = Math.floor(((totalDonation / 10) * 100)) / 100 ;\n\n        // Add the daily donation for the first 9 days\n        const equalSchedule = new Array(9).fill(dailyDonation.toFixed(2));\n\n        // Add the leftover for the 10th day. Each number multiplied by 100 then divided to avoid floating point precision error\n        equalSchedule.push(((totalDonation * 100 - dailyDonation * 9 * 100) / 100).toFixed(2));\n        \n        return equalSchedule;\n    } \n\n    if (method === 'double odd'){\n        const doubleOddSchedule = [];\n        // even days 1/3 of total donation, odd days 2/3 of total donation. 5 even days 5 odd days.  \n        const evenDay = Math.floor((totalDonation / 3 / 5) * 100) / 100;\n        const oddDay = Math.floor((totalDonation * 2 / 3 / 5) * 100) / 100;\n\n        // Add first 9 days payments\n        for(let i = 0; i < 9; i++){\n            doubleOddSchedule.push( (i + 1) % 2 === 0 ? evenDay.toFixed(2) : oddDay.toFixed(2) )\n        }\n\n        // Add leftover after 5 odd day and 4 even day payments\n        doubleOddSchedule.push((((totalDonation - oddDay * 5 - evenDay * 4) * 100) / 100).toFixed(2));\n\n        return doubleOddSchedule;\n    }\n\n    // return array of - if method input invalid\n    return new Array(10).fill('-');\n}\n\nexport {calculateDonationSchedule};","import './App.css';\nimport Hero from './components/Hero';\nimport CalculationArea from './components/CalculationArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Hero />\n        <CalculationArea />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}